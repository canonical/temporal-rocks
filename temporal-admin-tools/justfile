set quiet # Recipes are silent by default
set export # Just variables are exported to environment variables

[private]
default:
	just --list

[private]
start-local-registry: (stop-local-registry)
	docker run -d -p 5000:5000 --name registry registry:2.7

[private]
stop-local-registry: 
	docker stop registry || true
	docker rm registry || true

[private]
push-to-local-registry version:
	#!/usr/bin/bash
	set -euox pipefail

	rock_file=$(ls "${version}" | grep "\.rock")
	version="${version#temporal-server/}"

	rockcraft.skopeo --insecure-policy copy --dest-tls-verify=false \
		"oci-archive:${version}/${rock_file}" \
		"docker://localhost:5000/temporal-admin-tools-dev:${version}"

# Clean the rockcraft project of the component and remove any existing rock files
clean version:
	cd "${version#temporal-admin-tools/}" && rockcraft clean
	cd "${version#temporal-admin-tools/}" && rm -f "$(ls | grep *.rock)"

# Pack a rock for a specific component
pack version debug="":
	#!/usr/bin/bash
	debug_options=$(if [ -n "${debug}" ]; then echo "--debug"; fi)
	cd "${version}" && rockcraft pack ${debug_options}

# Pack rock for component and run pod with rock in kubernetes
run version: (start-local-registry) (pack version) (push-to-local-registry version)
	#!/usr/bin/bash
	set -euxo pipefail

	trap 'just stop-local-registry' EXIT

	version="${version#temporal-admin-tools/}"

	extra_options="-e TEMPORAL_ROOT=/etc/temporal -e TEMPORAL_ENVIRONMENT=development-sqlite"
	goss_vars="GOSS_KUBECTL_BIN=\"$(which kubectl)\" GOSS_OPTS=\"--retry-timeout 60s --color\""
	
	eval "env ${goss_vars} kgoss edit -i localhost:5000/temporal-admin-tools-dev:${version} ${extra_options}"

# Pack rock for component and run goss tests with rock in kubernetes
test version: (start-local-registry) (pack version) (push-to-local-registry version)
	#!/usr/bin/bash
	set -euxo pipefail

	trap 'just stop-local-registry' EXIT

	version="${version#temporal-admin-tools/}"

	extra_options+="-e TEMPORAL_ROOT=/etc/temporal -e TEMPORAL_ENVIRONMENT=development-sqlite"
	goss_vars="GOSS_KUBECTL_BIN=\"$(which kubectl)\" GOSS_OPTS=\"--retry-timeout 60s\""

	eval "env ${goss_vars} kgoss run -i localhost:5000/temporal-admin-tools-dev:${version} ${extra_options}"
