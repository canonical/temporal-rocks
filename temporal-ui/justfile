set export # Just variables are exported to environment variables
set fallback # Traverse upward in directory structure to find shared targets

[private]
default:
	just --list

[private]
start-local-registry:
	just --justfile=../justfile start-local-registry

[private]
push-to-local-registry version:
	just --justfile=../justfile push-to-local-registry "temporal-ui" $version

[private]
clone-ui-repo rock_version:
	rm -rf ui
	git clone --branch "v${rock_version}" --single-branch https://github.com/temporalio/ui.git ui


# Pack the rock for the provided version
pack version debug="":
	just --justfile=../justfile pack temporal-ui/${version} ${debug}

# Clean the rockcraft project of the component and remove any existing rock files
clean version:
	cd "${version#temporal-ui/}" && rockcraft clean
	cd "${version#temporal-ui/}" && rm -f "$(ls | grep *.rock)"
	rm -rf ui

# Pack rock for component and run pod with rock in kubernetes
run version: (start-local-registry) (pack version) (push-to-local-registry version)
	#!/usr/bin/bash
	set -euxo pipefail

	trap 'just stop-local-registry' EXIT

	rock_version="$(just format_directory $version)"
	rock_version="${version#temporal-ui/}"

	just clone-ui-repo $rock_version

	extra_options="-d ui/server/config -e TEMPORAL_ROOT=/home/ui-server -e TEMPORAL_ENVIRONMENT=development"
	goss_vars="GOSS_KUBECTL_BIN=\"$(which kubectl)\" GOSS_OPTS=\"--retry-timeout 60s --color\" GOSS_CONTAINER_PATH=\"/home/ui-server\""
	
	eval "env ${goss_vars} kgoss edit -i localhost:5000/temporal-ui-dev:${rock_version} ${extra_options}"

	rm -rf ui

# Pack rock for component and run goss tests with rock in kubernetes
test version: (start-local-registry) (pack version) (push-to-local-registry version)
	#!/usr/bin/bash
	set -euxo pipefail

	trap 'just stop-local-registry' EXIT

	rock_version="$(just format_directory $version)"
	rock_version="${version#temporal-ui/}"

	just clone-ui-repo $rock_version

	extra_options="-d ui/server/config -e TEMPORAL_ROOT=/home/ui-server -e TEMPORAL_ENVIRONMENT=development"
	goss_vars="GOSS_KUBECTL_BIN=\"$(which kubectl)\" GOSS_OPTS=\"--retry-timeout 60s\" GOSS_CONTAINER_PATH=\"/home/ui-server\""
	
	eval "env ${goss_vars} kgoss run -i localhost:5000/temporal-ui-dev:${rock_version} ${extra_options}"

	rm -rf ui
